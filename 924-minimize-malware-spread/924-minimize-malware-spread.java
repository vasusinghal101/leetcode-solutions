class Solution {
    int size=0;
    int ic=0;
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        HashSet<Integer> infected = new HashSet<>();
        for(int n : initial){
            infected.add(n);
        }

        boolean[] visited = new boolean[graph.length];
        int max = 0;
        int ans = initial[0];
        for(int i : initial){
            if(!visited[i]){
                size = ic = 0;
                gcc(graph,infected, visited, i);
                if(size > max && ic == 1){
                    ans=i;
                    max=size;
                }
            }
        }
        return ans;
    }
    
public void gcc(int[][] graph,  HashSet<Integer> infected, boolean[] visited, int src){  
        if(visited[src]) return;
        
        visited[src]  = true;
        size++;
        if(infected.contains(src))ic++;
        for(int i=0; i<graph.length;i++){
            if(graph[src][i]==1){
                gcc(graph,infected,visited,i);
            }
        }
    }
}